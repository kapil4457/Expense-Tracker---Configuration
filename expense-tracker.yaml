version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      zookeeper:
        condition: service_started
  mysql:
    image: mysql:8.3.0
    container_name: mysql-8.3.0
    restart: always
    environment:
      MYSQL_USER: test
      MYSQL_ROOT_USER: root
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - mysql-db:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    image: user-service
    container_name: user-service
    ports:
      - "9810:9810"
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: userservice
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy

  auth-service:
    image: auth-service
    container_name: auth-service
    ports:
      - "9898:9898"
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: authservice
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy

  expense-service:
    image: expense-service
    container_name: expense-service
    ports:
      - "9820:9820"
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: expenseservice
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy

  ds-service:
    image: ds-service
    container_name: ds-service
    ports:
      - "8010:8010"
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      OPENAI_API_KEY: <YOUR-OPENAI-KEY-HERE>
    depends_on:
      - mysql
      - kafka
      - expense-service
      - user-service

  kong-service:
    image: kong-expense-tracker:latest
    volumes:
      - "./kong/config:/usr/local/kong/declarative"
      - "./kong/custom-plugins:/usr/local/share/lua/5.1/kong/plugins"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/usr/local/kong/declarative/kong.yaml"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_LOG_LEVEL: "debug"
      KONG_PLUGINS: "custom-auth"
      KONG_LUA_PACKAGE_PATH: "/usr/local/share/lua/5.1/?.lua;;"
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "8443:8443/tcp"
      - "8444:8444/tcp"
    depends_on:
      - auth-service
      - user-service
volumes:
  mysql-db:
    driver: local
